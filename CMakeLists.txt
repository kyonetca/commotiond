CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(PROJECT_NAME_STR commotion)
PROJECT(${PROJECT_NAME_STR})
SET(NO_OPTIMIZE OFF CACHE BOOL "Disable optimization flags.")
SET(DEBUG OFF CACHE BOOL "Turn on debugging.")
SET(OPENWRT OFF CACHE BOOL "Disable subsystems that are unnecessary for OpenWRT platform.")
SET(TEST ON CACHE BOOL "Build unit tests.")
SET(PLUGINS ON CACHE BOOL "Build plugins.")
SET(COMMOTION_VERSION_MAJOR 0)
SET(COMMOTION_VERSION_MINOR 1)
SET(COMMOTION_VERSION_PATCH 0)
SET(COMMOTION_CONFIGFILE \"/etc/commotion/commotiond.conf\")
SET(COMMOTION_STATEDIR \"/var/run/commotion\")
SET(COMMOTION_PIDFILE \"/var/run/commotiond.pid\")
SET(COMMOTION_MANAGESOCK \"/var/run/commotiond.sock\")
SET(COMMOTION_PLUGINDIR \"/usr/lib/commotion/plugins\")
SET(COMMOTION_PROFILEDIR \"/etc/commotion/profiles.d\")
SET(CMAKE_VERBOSE_MAKEFILE OFF)

SET(COMMON_INCLUDES ${PROJECT_SOURCE_DIR}/src)

CONFIGURE_FILE( "${CMAKE_SOURCE_DIR}/src/config.h.in" "${CMAKE_SOURCE_DIR}/src/config.h" )

ADD_DEFINITIONS(-Os -Wall --std=gnu99 -Wmissing-declarations -DNDEBUG)

IF(OPENWRT)
  ADD_DEFINITIONS(-D_OPENWRT -DUSESYSLOG)
ENDIF()

IF(DEBUG)
  ADD_DEFINITIONS(-g3)
  REMOVE_DEFINITIONS(-DNDEBUG)
  IF(NO_OPTIMIZE)
    REMOVE_DEFINITIONS(-Os)
    ADD_DEFINITIONS(-O0)
  ENDIF()
ENDIF()

ADD_SUBDIRECTORY(src)

IF(TEST)
  ENABLE_TESTING()
  ADD_SUBDIRECTORY(tests)
ENDIF()

IF(PLUGINS)
  ADD_SUBDIRECTORY(plugins)
ENDIF()

IF(NOT OPENWRT)
  FIND_PACKAGE(Doxygen)
  IF(DOXYGEN_FOUND)
    CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/doxygen/Doxyfile.in ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)
    ADD_CUSTOM_TARGET(doc ALL
      ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
      WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
      COMMENT "Generating API documentation with Doxygen" VERBATIM
    )
  ENDIF(DOXYGEN_FOUND)
ENDIF()

INSTALL(FILES files/commotiond.conf DESTINATION /etc/commotion)
INSTALL(DIRECTORY files/profiles.d DESTINATION /etc/commotion)

# uninstall target
CONFIGURE_FILE(
    "${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
    IMMEDIATE @ONLY)

ADD_CUSTOM_TARGET(uninstall
    COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)

